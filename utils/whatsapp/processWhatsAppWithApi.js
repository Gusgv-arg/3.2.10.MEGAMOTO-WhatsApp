import { sendFlow_1ToLead } from "../../flows/sendFlow_1ToLead.js";
import Leads from "../../models/leads.js";
import { createLeadInDb } from "../dataBase/createLeadInDb.js";
import { saveNotificationInDb } from "../dataBase/saveNotificationInDb.js";
import { handleWhatsappMessage } from "./handleWhatsappMessage.js";

export const processWhatsAppWithApi = async (userMessage) => {
	let existingLead;
	let log;

	try {
		// Busca el Lead
		existingLead = await Leads.findOne({ id_user: userMessage.userPhone });

		// Lead NO EXISTE -----------------------------------------------------------
		if (!existingLead) {
			// Llama a la funci√≥n para crear el Lead y guardar en BD
			existingLead = await createLeadInDb(userMessage);

			// Env√≠a un mensaje previo de bienvenida xq no se ve el Flow
			const greeting = `üëã Hola ${userMessage.name}, bienvenido a Megamoto!\n\nPor favor complet√° el siguiente formulario con tu consulta *desde tu celular.*\n\n*¬°Tu moto est√° m√°s cerca en MEGAMOTO!*`;

			await handleWhatsappMessage(userMessage.userPhone, greeting);

			// Env√≠a el Flow 1 al lead y me hago del wamId
			const wamId_Flow1 = await sendFlow_1ToLead(userMessage);

			// Agrego el wmId al objeto userMessage para traquear status FLOW1
			userMessage.wamId_Flow1 = wamId_Flow1;

			// Graba notificaci√≥n al cliente en la BDs
			const notification = { message: greeting };
			await saveNotificationInDb(userMessage, notification);

			// Actualiza el log
			log = `1-Se creo el lead ${userMessage.name} en BD. 2-Se mand√≥ saludo inicial. 3-Se mand√≥ Flow 1. 4-Se grab√≥ todo en BD.`;
			return log;
			
		} else {
			// -------- Lead YA EXISTE ------------------------------------------------------

			const lastFlow = existingLead.flows[existingLead.flows.length - 1];
			const lastFlowStatus = lastFlow.client_status;
			const lastFlowVendor = lastFlow.vendor_name;
			const lastFlowPhone = lastFlow.vendor_phone;

			let message;

			if (lastFlowStatus !== "compr√≥" && lastFlowStatus !== "no compr√≥") {
				// El Lead ya est√° en la Fila

				if (lastFlowVendor) {
					// El lead ya tiene un vendedor asignado

					message = `*üîî Notificaci√≥n Autom√°tica:*\n\nüì£ Estimado ${userMessage.name}; le enviaremos tu consulta a tu vendedor asignado que te recordamos es ${lastFlowVendor} con el celular ${lastFlowPhone}.\n‚ùó Agendalo para identificarlo cuando te contacte.\nüôè Te pedimos un poco de paciencia.\n¬°Haremos lo posible para atenderte cuanto antes!\n\n*MEGAMOTO* `;

					// Env√≠a notificaci√≥n de recordatorio al Lead
					await handleWhatsappMessage(userMessage.userPhone, message);

					// Env√≠a alarma al vendedor con la pregunta del cliente
					const alarm = `*üîî Notificaci√≥n Autom√°tica:*\n\nüì£ El cliente ${userMessage.name} cel: ${userMessage.userPhone} envi√≥ el siguiente mensaje: ${userMessage.message}.\n\n*MEGAMOTO*`;

					await handleWhatsappMessage(lastFlowPhone, alarm);

					// Graba notificaci√≥n al cliente en la BDs (falta grabar la del vendedor)
					const notification = { message: message };
					await saveNotificationInDb(userMessage, notification);

					// Actualiza el log
					log = `1-Se notific√≥ al lead ${userMessage.name} recordando su vendedor. 2-Alarma al vendedor ${lastFlowVendor}. `;

					return log;
				} else {
					// El Lead NO tiene un vendedor asignado
					message = `*üîî Notificaci√≥n Autom√°tica:*\n\nüì£ Estimado ${userMessage.name}; le estaremos enviando tu consulta a un vendedor. Haremos lo posible para asignarte uno cuando antes y te notificaremos con sus datos.\n\n*¬°Tu moto est√° m√°s cerca en MEGAMOTO!*`;

					// Env√≠a notificaci√≥n al Lead
					await handleWhatsappMessage(userMessage.userPhone, message);

					// Graba la notificaci√≥n en la base de datos
					const notification = { message: message };
					await saveNotificationInDb(userMessage, notification);

					// Actualiza el log
					log = `1-Se notific√≥ al Lead ${userMessage.name} que a√∫n no tiene un vendedor asignado. `;

					return log;

					//------- VER SI A FUTURO CREO UNA ALARMA EN ESTA INSTANCIA O ALGUN PROCESO ESPECIAL -------
				}
			} else {
				// Lead ya existe y NO tiene un Flow abierto arranca el proceso de 0.

				// Env√≠a un mensaje previo de bienvenida x si no se ve el Flow
				const greeting2 = `üëã Hola nuevamente, gracias por seguir confiando en Megamoto!\n\nüì£ Para atenderte mejor, vas a recibir otro mensaje el cual te pedimos que completes.\n\n*‚ùó Importante: entr√° en tu celular para ver el segundo mensaje.* \n\n*¬°Tu moto est√° m√°s cerca en MEGAMOTO!*`;

				await handleWhatsappMessage(userMessage.userPhone, greeting2);

				// Env√≠a el Flow 1 al lead y me hago del wamId
				const wamId_Flow1 = await sendFlow_1ToLead(userMessage);

				// Agrego el wmId al objeto userMessage para traquear status FLOW1
				userMessage.wamId_Flow1 = wamId_Flow1;

				// Graba notificaci√≥n al cliente en la BDs
				const notification = { message: greeting2 };
				await saveNotificationInDb(userMessage, notification);

				// Actualiza el log
				log = `1-Se volvi√≥ a saludar al lead ${userMessage.name} ya que estaba en BD y no ten√≠a un Flow abierto. 2-Se le envi√≥ Flow 1.`;

				return log;
			}
		}
	} catch (error) {
		console.error(
			"Error in processWhatsAppWithApi.js:",
			error?.response?.data
				? JSON.stringify(error.response.data)
				: error.message
		);

		const errorMessage = `Error en processWhatsAppWithApi.js: ${
			error?.response?.data
				? JSON.stringify(error.response.data)
				: error.message
		}`;

		throw errorMessage;
	}
};
